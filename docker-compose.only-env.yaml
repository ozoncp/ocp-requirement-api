version: '3.7'

services:

  postgres:
    image: postgres:latest
    ports:
      - "5444:5432"
    environment:
      POSTGRES_DB: requirement_db
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
    volumes:
      - pgdata:/var/lib/postgresql/data

  zookeeper:
    image: docker.io/bitnami/zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka
    ports:
    - "9094:9094"
    environment:
      - KAFKA_BROKER_ID=1
      # https://github.com/bitnami/bitnami-docker-kafka/blob/master/README.md#accessing-kafka-with-internal-and-external-clients
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_LISTENERS=INTERNAL://:9092,EXTERNAL://:9094
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://127.0.0.1:9094
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_DEFAULT_REPLICATION_FACTOR=1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_NUM_PARTITIONS=1
      - KAFKA_OPTS=-Djava.net.preferIPv4Stack=True
    depends_on:
      - zookeeper

  kafka-ui:
    image: obsidiandynamics/kafdrop
    restart: unless-stopped
    depends_on:
      - kafka
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - 6831:6831/udp
      - 16686:16686

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - "./configs/prom.yaml:/etc/prometheus/prometheus.yml"
volumes:
  pgdata:
